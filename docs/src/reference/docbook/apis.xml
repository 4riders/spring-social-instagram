<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="apis" xmlns:xlink="http://www.w3.org/1999/xlink">
	<title>Working with Service Provider APIs</title>
  
	<section xml:id="section_api_instagram">
		<title>Instagram</title>

		<para>
			Spring Social's <interfacename>Instagram</interfacename> and its implementation, <classname>InstagramTemplate</classname> provide the operations needed to interact with Instagram on behalf of a user.
			Creating an instance of <classname>InstagramTemplate</classname> is as simple as constructing it by passing in a client ID and/or an authorized access token to the constructor:
		</para>

		<programlisting language="java"><![CDATA[
String clientId = "123...";
String accessToken = "f8FX29g..."; // access token received from Instagram after OAuth authorization
Instagram instagram = new InstagramTemplate(clientId, accessToken);]]>
      </programlisting>

		<para>
			If you are using Spring Social's service provider framework, as described in <xref linkend="serviceprovider"/>, you can get an instance of <interfacename>Instagram</interfacename> via a <interfacename>Connection</interfacename>. 
			For example, the following snippet calls <methodname>getApi()</methodname> on a connection to retrieve a <interfacename>Instagram</interfacename>:
		</para>				
		
		<programlisting language="java"><![CDATA[
Connection<Instagram> connection = connectionRepository.findPrimaryConnectionToApi(Instagram.class);
Instagram instagram = connection.getApi();]]>
		</programlisting>
		
		<para>
			Here, <interfacename>ConnectionRepository</interfacename> is being asked for the primary connections that the current user has with Instagram.
			From that connection, it retrieves a <interfacename>Instagram</interfacename> instance that is configured with the connection details received when the connection was first established.
		</para>

		<para>
			With a <interfacename>Instagram</interfacename> in hand, there are several ways you can use it to interact with Instagram on behalf of the user.
			Spring Social's Instagram API binding is divided into four sub-APIs exposes through the methods of <interfacename>Instagram</interfacename>:
		</para>

			<programlisting language="java"><![CDATA[
public interface Instagram {

    LocationOperations locationOperations();

    MediaOperations mediaOperations();
	
    TagOperations tagOperations();

    UserOperations userOperations();
	
}]]>
			</programlisting>

		<para>
			The sub-API interfaces returned from <interfacename>Instagram</interfacename>'s methods are described in <xref linkend="table-instagram-sub-apis" />.
		</para>

		<table xml:id="table-instagram-sub-apis">
			<title>Instagram's Sub-APIs</title>
			<tgroup cols="2">
				<colspec align="left" />
				<colspec colnum="1" colname="col1" colwidth="2*"/>
				<colspec colnum="2" colname="col2" colwidth="2*"/>
				<thead>
					<row>
						<entry align="center">Sub-API Interface</entry>
						<entry align="center">Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>LocationOperations</entry>
						<entry>Find media based on location</entry>
					</row>
					<row>
						<entry>MediaOperations</entry>
						<entry>Search media, manage likes, manage comments, etc.</entry>
					</row>
					<row>
						<entry>TagOperations</entry>
						<entry>Find media based on tags</entry>
					</row>
					<row>
						<entry>UserOperations</entry>
						<entry>Retrieve user profile data, user media, and manage relationships between users.</entry>
					</row>
				</tbody>
			</tgroup>
		</table>

		<para>
			The following sections will give an overview of common tasks that can be performed via <interfacename>Instagram</interfacename> and its sub-APIs.
			For complete details on all of the operations available, refer to the JavaDoc.
		</para>

		<section id="instagram-getProfile">
			<title>Retrieving a user's profile data</title>

			<para>
				You can retrieve a user's Instagram profile data using <interfacename>Instagram</interfacename>' <methodname>getUser()</methodname> method:
			</para>

			<programlisting language="java"><![CDATA[
InstagramProfile profile = instagram.userOperations().getUser();]]>
			</programlisting>

			<para>
				The <classname>InstagramProfile</classname> object will contain basic profile information about the authenticating user, including their full name and their Instagram ID.
			</para>
			
		</section>
		
	</section>

</chapter>